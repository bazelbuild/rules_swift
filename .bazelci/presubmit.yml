---
x_defaults:
  # YAML has a feature for "repeated nodes", BazelCI is fine with extra nodes
  # it doesn't know about; so that is used to avoid repeating common subparts.
  mac_common: &mac_common
    platform: macos_arm64
    xcode_version: "16.2"
    build_targets:
      - "//examples/..."
    test_targets:
      - "//examples/..."
      - "//test/..."
  linux_environment: &linux_environment
    platform: ubuntu2004
    environment:
      CC: clang
      SWIFT_VERSION: "6.0.3"
      SWIFT_HOME: "$HOME/swift-$SWIFT_VERSION"
      PATH: "$SWIFT_HOME/usr/bin:$PATH"
  linux_common: &linux_common
    <<: *linux_environment
    build_flags: &linux_flags
      # On Linux, we look for Swift toolchain binaries on the path. We may be
      # able to change this when we start auto-downloading toolchains (see
      # https://github.com/bazelbuild/rules_swift/issues/4).
      - "--action_env=PATH"
    build_targets:
      - "//examples/..."
      - "-//examples/apple/..."
    test_flags: *linux_flags
    test_targets:
      - "//examples/..."
      - "//test/..."
      - "-//examples/apple/..."
      # The following tests require Swift >5.8.
      - "-//test:const_values_empty_const_values_multiple_files"
      - "-//test:const_values_empty_const_values_single_file"
      - "-//test:const_values_expected_argv"
      - "-//test:const_values_wmo_single_values_file"
      - "-//test:output_file_map_default"
  windows_common: &windows_common
    platform: windows
    build_flags:
      # Override 'sandboxed' strategy set in .bazelrc because it's not
      # available on Windows
      - "--strategy=SwiftCompile="
    build_targets:
      - "//tools/..."

tasks:
  ubuntu2004_last_green:
    name: "Last Green Bazel"
    # DNM: Bisecting Bazel hang
    bazel: 0522f8e58bf864005207eb8f09162d35ddd1f678
    shell_commands:
      - "echo --- Downloading and extracting Swift $SWIFT_VERSION to $SWIFT_HOME"
      - "mkdir $SWIFT_HOME"
      - "curl https://download.swift.org/swift-${SWIFT_VERSION}-release/ubuntu2004/swift-${SWIFT_VERSION}-RELEASE/swift-${SWIFT_VERSION}-RELEASE-ubuntu20.04.tar.gz | tar xvz --strip-components=1 -C $SWIFT_HOME"
    <<: *linux_common

buildifier: 8.2.1
